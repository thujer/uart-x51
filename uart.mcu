
// +---------------------------------------------------------------------+
// |  UART MCU diferences                                                |
// +---------------------------------------------------------------------+
#include "target.def"


void uart_mcu_init(uint timer_value)
{
    if(timer_value);

    #if TARGET_MCU == LPC922
        // clear SMOD0
        PCON  &= ~0x40;
        SCON   =  0x50;
    
        // set or clear SMOD1
        PCON  &=  0x7f;
        PCON  |= (0 << 8);
        SSTAT  =  0x81; // 0xA1; // 1010 0001
        // SSTAT
        // Address: BAh
        // Not bit addressable
        //   7      6       5       4       3       2       1       0
        // DBMOD    INTLO   CIDIS   DBISEL  FE      BR      OE      STINT
        //
        //  Reset Value: 00000000B
        //  BIT         SYMBOL  FUNCTION
        //  SSTAT.7     DBMOD   Double buffering mode. When set = 1 enables double buffering. Must be ‘0’ for UART 
        //                      mode 0. In order to be compatible with existing 80C51 devices, this bit is reset
        //                      to ‘0’ to disable double buffering.
        //
        //  SSTAT.6     INTLO   Transmit interrupt position. When cleared = 0, the Tx interrupt is issued
        //                      at the beginning of the stop bit. When set = 1, the  Tx interrupt is issued
        //                      at end of the stop bit. Must be ‘0’ for mode 0. 
        //                      Note that in the case of single buffering, if the Tx interrupt occurs
        //                      at the end of a STOP bit, a gap may exist before the next start bit.
        //
        //  SSTAT.5     CIDIS   Combined Interrupt Disable. When set = 1, Rx and Tx interrupts are separate.
        //                      When cleared = 0, the UART uses a combined Tx/Rx interrupt
        //                      (like a conventional 80C51 UART). This bit is reset to ‘0’ to select combined
        //                      interrupts.
        //
        //  SSTAT.4     DBISEL  Double buffering transmit interrupt select. Used only if double buffering
        //                      is enabled.This bit controls the number of interrupts that can occur when
        //                      double buffering is enabled. When set, one transmit interrupt is generated
        //                      after each character written to SBUF, and there is also one more transmit
        //                      interrupt generated at the beginning (INTLO = 0) or the end (INTLO = 1)
        //                      of the STOP bit of the last character sent (i.e., no more data in buffer).
        //                      This last interrupt can be used to indicate that all transmit operations
        //                      are over. When cleared = 0, only one transmit interrupt is generated per
        //                      character written to SBUF. Must be ‘0’ when double buffering is disabled.
        //                      Note that except for the first character written (when buffer is empty),
        //                      the location of the transmit interrupt is determined by INTLO. When the first
        //                      character is written, the transmit interrupt is generated immediately after
        //                      SBUF is written.
        //
        //  SSTAT.3     FE      Framing error flag is set when the receiver fails to see a valid STOP bit
        //                      at the end of the frame. Cleared by software.
        //
        //  SSTAT.2     BR      Break Detect flag. A break is detected when any 11 consecutive bits are sensed low.
        //                      Cleared by software.
        //
        //  SSTAT.1     OE      Overrun Error flag is set if a new character is received in the receiver buffer
        //                      while it is still full (before the software has read the previous character from
        //                      the buffer), i.e., when bit 8 of a new byte is received while RI in SCON is still
        //                      set. Cleared by software.
        //
        //  SSTAT.0     STINT   Status Interrupt Enable. When set =1, FE, BR, or OE can causean interrupt.
        //                      The interrupt used  (vector address 0023h) is shared with RI (CIDIS = 1)
        //                      or the combined TI/RI (CIDIS = 0). When cleared = 0, FE, BR, OE cannot cause
        //                      an interrupt. (Note: FE, BR, or OE is often accompanied by a RI, which will
        //                      generate an interrupt regardless of the state of STINT). Note that BR can
        //                      cause a break detect reset if EBRR (AUXR1.6) is set to ‘1’.
        
        // enable break detect
        AUXR1 |=  0x40;
        
        // configure baud rate generator 7200
        //BRGCON =  0x00;
        //BRGR0  =  0xF0;
        //BRGR1  =  0x03;
        //BRGCON =  0x03;

        // configure baud rate generator 19200
        BRGCON = 0x00;
        BRGR0  = 0x70;
        BRGR1  = 0x01;
        BRGCON = 0x03;
        
        // TxD = push-pull
        P1M1  &= ~0x01;
        P1M2  |=  0x01;
    
        // RxD = input
        //P1M1 |= 0x02;
        //P1M2 &= ~0x02;
    
        // RxD = quasi-bidirectional
        // pozn. pri RxD input je pri odpojeni kabelu vyvolano cyklicke preruseni z duvodu nuly na vstupu
        P1M1  &= ~0x02;
        P1M2  &= ~0x02;
        
        // set receive isr priority to level 2
        IP0   &= 0xEF;
        IP0H  |= 0x10;
        //IP0H &= 0xEF;
    
        // enable uart receive interrupt
        ESR = 1;
    
        // set transmit isr priority to 0
        //IP1 &= 0xBF;
        //IP1H &= 0xBF;
    
        // enable uart transmit interrupt
        //EST = 1;
    #endif

    #if TARGET_MCU==C51RD2

        //--------------------------------------------//
        //      SCON - Serial Control Register        //
        //--------------------------------------------//
        // Bit addressable
        //
        //     7       6      5    4    3    2    1    0
        //  +---------------------------------------------+
        //  | FE/SM0  SM1   SM2   REN  TB8  RB8  TI   RI  |
        //  +---------------------------------------------+
        //
        // Reset Value
        //     0       0     0     0    0    0    0    0
        //
        // Set Value
        //     0       1     0     1    0    0    0    0
        //
        SCON=0;
        ///////////
        //  FE=0;  //+-> Framing Error bit (SMOD0=1)
               //|   Clear to reset the error state, not cleared by a valid stop
               //|   Set by hardware when an invalid stop bit is detected.
               //|   SMOD0 must be set to enable access to the FE bit
               //|
        SM0=0;   //+-> Serial port Mode bit 0
               //    Refer to SM1 for serial port mode selection.
               //    SMOD0 must be cleared to enable access to the SM0 bit
               //
        SM1=1;   // -> Serial port Mode bit 1
               //    SM0  SM1  Mode  Description Baud Rate
               //     0    0    0     Shift Register F_CPU_PERIPH/6
               //     0    1    1      8-bit UART Variable
               //     1    0    2      9-bit UART F_CPU_PERIPH
               //     1    1    3     39-bit UART Variable /32 or /16
               //
        SM2=0;   // -> Serial port Mode 2 bit / Multiprocessor Communication Enable bit
               //    Clear to disable multiprocessor communication feature.
               //    Set to enable multiprocessor communication feature in mode 2 and 3, and
               //    eventually mode 1. This bit should be cleared in mode 0.
               //
        REN=1;   // -> Reception Enable bit
               //    Clear to disable serial reception.
               //    Set to enable serial reception.
               //
        TB8=0;   // -> Transmitter Bit 8 / Ninth bit to transmit in modes 2 and 3
               //    o transmit a logic 0 in the 9th bit.
               //    Set to transmit a logic 1 in the 9th bit.
               //
        RB8=0;   // -> Receiver Bit 8 / Ninth bit received in modes 2 and 3
               //    Cleared by hardware if 9th bit received is a logic 0.
               //    2RB8
               //    Set by hardware if 9th bit received is a logic 1.
               //    In mode 1, if SM2 = 0, RB8 is the received stop bit. In mode 0 RB8 is not used.
               //
        TI=0;    // -> Transmit Interrupt flag
               //    Clear to acknowledge interrupt.
               //    Set by hardware at the end of the 8th bit time in mode 0 or at the beginning of
               //    the stop bit in the other modes.
               //
        RI=0;    // -> Receive Interrupt flag
               //    Clear to acknowledge interrupt.
               //    Set by hardware at the end of the 8th bit time in mode 0, see Figure 2-26. and
               //    Figure 2-27. in the other modes.
               //
        
        //  2.13.2 Baud Rate Selection
        //  Table for UART
        //   TCLK    RCLK     TBCK     RBCK   Clock Source  Clock Source
        //  (T2CON) (T2CON) (BDRCON) (BDRCON)    UART Tx      UART Rx
        //-----------------------------------------------------------------
        //     0       0        0        0        Timer 1      Timer 1
        //     1       0        0        0        Timer 2      Timer 1
        //     0       1        0        0        Timer 1      Timer 2
        //     1       1        0        0        Timer 2      Timer 2
        //     X       0        1        0        INT_BRG      Timer 1
        //     X       1        1        0        INT_BRG      Timer 2
        //     0       X        0        1        Timer 1      INT_BRG
        //     1       X        0        1        Timer 2      INT_BRG
        //     X       X        1        1        INT_BRG      INT_BRG
        //-----------------------------------------------------------------
        
        TL1=0xFB;      // Low Byte of Timer 1.
        TH1=0xFB;      // High Byte of Timer 1.
        TR1=1;         // Timer 1 Run Control Bit - Start
        TMOD|=0x20;    // Timer 1 Select Mode 2: 8-bit auto-reload timer/counter (TL1). Reloaded from TH1 at overflow.
        
        
        //--------------------------------------------//
        //     BDRCON - Baud Rate Control Register    //
        //--------------------------------------------//
        // Not bit addressable
        //
        //      7      6      5     4     3     2     1     0
        //  +---------------------------------------------------+
        //  |   -      -      -    BRR   TBCK  RBCK  SPD   SRC  |
        //  +---------------------------------------------------+
        //
        // Reset Value
        //      X      X      X     0     0     0     0     0
        //
        BDRCON=0;
        ///////////
        //  BRR=0;   // -> Baud Rate Run Control bit
        //           //    Cleared to stop the internal Baud Rate Generator.
        //           //    Set to start the internal Baud Rate Generator.
        //           //
        //  TBCK=0;  // -> Transmission Baud rate Generator Selection bit for UART
        //           //    Cleared to select Timer 1 or Timer 2 for the Baud Rate Generator.
        //           //    Set to select internal Baud Rate Generator.
        //           //
        //  RBCK=0;  // -> Reception Baud Rate Generator Selection bit for UART
        //           //    Cleared to select Timer 1 or Timer 2 for the Baud Rate Generator.
        //           //    Set to select internal Baud Rate Generator.
        //           //
        //  SPD=0;   // -> Baud Rate Speed Control bit for UART
        //           //    Cleared to select the SLOW Baud Rate Generator.
        //           //    Set to select the FAST Baud Rate Generator.
        //           //
        //  SRC=0;   // -> Baud Rate Source select bit in Mode 0 for UART
        //           //    Cleared to select F_OSC /12 as the Baud Rate Generator (F_CLK_PERIPH /6 in X2 mode).
        //           //    Set to select the internal Baud Rate Generator for UARTs in mode 0.
        //           //
        
        
        //--------------------------------------------//
        //       PCON - Power Control Register        //
        //--------------------------------------------//
        // Not bit addressable
        //
        //      7      6      5     4     3     2     1     0
        //  +---------------------------------------------------+
        //  | SMOD1  SMOD0    -    POF   GF1   GF0   PD    IDL  |
        //  +---------------------------------------------------+
        //
        // Reset Value
        //     0       0      X     1     0     0     0     0
        //
        PCON &= 0x7F;    // Power Controll - Null SMODE1 - Disable UART double speed
        //  ///////////
        //  SMOD1=0; // -> Serial port Mode bit 1 for UART
        //           //    Set to select double baud rate in mode 1, 2 or 3.
        //           //
        //  SMOD0=0; // -> Serial port Mode bit 0 for UART
        //           //    Cleared to select SM0 bit in SCON register.
        //           //    Set to select FE bit in SCON register.
        //           //
        //  POF=0;   // -> Power-Off Flag
        //           //    Cleared to recognize next reset type.
        //           //    Set by hardware when VCC rises from 0 to its nominal voltage. Can also be set by software.
        //           //
        //  GF1=0;   // -> General purpose Flag
        //           //    Cleared by user for general purpose usage
        //           //    Set by user for general purpose usage.
        //           //
        //  GF0=0;   // -> General purpose Flag
        //           //    Cleared by user for general purpose usag
        //           //    Set by user for general purpose usage.
        //           //
        //  PD=0;    // -> Power-Down mode bit
        //           //    Cleared by hardware when reset occurs
        //           //    Set to enter power-down mode.
        //           //
        //  IDL=0;   // -> Idle mode bit
        //           //    Cleared by hardware when interrupt or reset occurs.
        //           //    Set to enter idle mode.
        //           //
        //           //
        // Power-off flag reset value will be 1 only after a power on (cold reset). A warm reset
        // doesn’t affect the value of this bit.

        ES = 1;
    #endif

    #if TARGET_MCU==C51ED2
        //--------------------------------------------//
        //      SCON - Serial Control Register        //
        //--------------------------------------------//
        // Bit addressable
        //
        //     7       6      5    4    3    2    1    0
        //  +---------------------------------------------+
        //  | FE/SM0  SM1   SM2   REN  TB8  RB8  TI   RI  |
        //  +---------------------------------------------+
        //
        // Reset Value
        //     0       0     0     0    0    0    0    0
        //
        // Set Value
        //     0       1     0     1    0    0    0    0
        //
        SCON=0;
        ///////////
        //  FE=0;  //+-> Framing Error bit (SMOD0=1)
               //|   Clear to reset the error state, not cleared by a valid stop
               //|   Set by hardware when an invalid stop bit is detected.
               //|   SMOD0 must be set to enable access to the FE bit
               //|
        SM0=0;   //+-> Serial port Mode bit 0
               //    Refer to SM1 for serial port mode selection.
               //    SMOD0 must be cleared to enable access to the SM0 bit
               //
        SM1=1;   // -> Serial port Mode bit 1
               //    SM0  SM1  Mode  Description Baud Rate
               //     0    0    0     Shift Register F_CPU_PERIPH/6
               //     0    1    1      8-bit UART Variable
               //     1    0    2      9-bit UART F_CPU_PERIPH
               //     1    1    3     39-bit UART Variable /32 or /16
               //
        SM2=0;   // -> Serial port Mode 2 bit / Multiprocessor Communication Enable bit
               //    Clear to disable multiprocessor communication feature.
               //    Set to enable multiprocessor communication feature in mode 2 and 3, and
               //    eventually mode 1. This bit should be cleared in mode 0.
               //
        REN=1;   // -> Reception Enable bit
               //    Clear to disable serial reception.
               //    Set to enable serial reception.
               //
        TB8=0;   // -> Transmitter Bit 8 / Ninth bit to transmit in modes 2 and 3
               //    o transmit a logic 0 in the 9th bit.
               //    Set to transmit a logic 1 in the 9th bit.
               //
        RB8=0;   // -> Receiver Bit 8 / Ninth bit received in modes 2 and 3
               //    Cleared by hardware if 9th bit received is a logic 0.
               //    2RB8
               //    Set by hardware if 9th bit received is a logic 1.
               //    In mode 1, if SM2 = 0, RB8 is the received stop bit. In mode 0 RB8 is not used.
               //
        TI=0;    // -> Transmit Interrupt flag
               //    Clear to acknowledge interrupt.
               //    Set by hardware at the end of the 8th bit time in mode 0 or at the beginning of
               //    the stop bit in the other modes.
               //
        RI=0;    // -> Receive Interrupt flag
               //    Clear to acknowledge interrupt.
               //    Set by hardware at the end of the 8th bit time in mode 0, see Figure 2-26. and
               //    Figure 2-27. in the other modes.
               //
        
        //  2.13.2 Baud Rate Selection
        //  Table for UART
        //   TCLK    RCLK     TBCK     RBCK   Clock Source  Clock Source
        //  (T2CON) (T2CON) (BDRCON) (BDRCON)    UART Tx      UART Rx
        //-----------------------------------------------------------------
        //     0       0        0        0        Timer 1      Timer 1
        //     1       0        0        0        Timer 2      Timer 1
        //     0       1        0        0        Timer 1      Timer 2
        //     1       1        0        0        Timer 2      Timer 2
        //     X       0        1        0        INT_BRG      Timer 1
        //     X       1        1        0        INT_BRG      Timer 2
        //     0       X        0        1        Timer 1      INT_BRG
        //     1       X        0        1        Timer 2      INT_BRG
        //     X       X        1        1        INT_BRG      INT_BRG
        //-----------------------------------------------------------------
        
        TL1=0xFB;      // Low Byte of Timer 1.
        TH1=0xFB;      // High Byte of Timer 1.
        TR1=1;         // Timer 1 Run Control Bit - Start
        TMOD|=0x20;    // Timer 1 Select Mode 2: 8-bit auto-reload timer/counter (TL1). Reloaded from TH1 at overflow.
        
        
        //--------------------------------------------//
        //     BDRCON - Baud Rate Control Register    //
        //--------------------------------------------//
        // Not bit addressable
        //
        //      7      6      5     4     3     2     1     0
        //  +---------------------------------------------------+
        //  |   -      -      -    BRR   TBCK  RBCK  SPD   SRC  |
        //  +---------------------------------------------------+
        //
        // Reset Value
        //      X      X      X     0     0     0     0     0
        //
        BDRCON=0;
        ///////////
        //  BRR=0;   // -> Baud Rate Run Control bit
        //           //    Cleared to stop the internal Baud Rate Generator.
        //           //    Set to start the internal Baud Rate Generator.
        //           //
        //  TBCK=0;  // -> Transmission Baud rate Generator Selection bit for UART
        //           //    Cleared to select Timer 1 or Timer 2 for the Baud Rate Generator.
        //           //    Set to select internal Baud Rate Generator.
        //           //
        //  RBCK=0;  // -> Reception Baud Rate Generator Selection bit for UART
        //           //    Cleared to select Timer 1 or Timer 2 for the Baud Rate Generator.
        //           //    Set to select internal Baud Rate Generator.
        //           //
        //  SPD=0;   // -> Baud Rate Speed Control bit for UART
        //           //    Cleared to select the SLOW Baud Rate Generator.
        //           //    Set to select the FAST Baud Rate Generator.
        //           //
        //  SRC=0;   // -> Baud Rate Source select bit in Mode 0 for UART
        //           //    Cleared to select F_OSC /12 as the Baud Rate Generator (F_CLK_PERIPH /6 in X2 mode).
        //           //    Set to select the internal Baud Rate Generator for UARTs in mode 0.
        //           //
        
        
        //--------------------------------------------//
        //       PCON - Power Control Register        //
        //--------------------------------------------//
        // Not bit addressable
        //
        //      7      6      5     4     3     2     1     0
        //  +---------------------------------------------------+
        //  | SMOD1  SMOD0    -    POF   GF1   GF0   PD    IDL  |
        //  +---------------------------------------------------+
        //
        // Reset Value
        //     0       0      X     1     0     0     0     0
        //
        PCON &= 0x7F;    // Power Controll - Null SMODE1 - Disable UART double speed
        //  ///////////
        //  SMOD1=0; // -> Serial port Mode bit 1 for UART
        //           //    Set to select double baud rate in mode 1, 2 or 3.
        //           //
        //  SMOD0=0; // -> Serial port Mode bit 0 for UART
        //           //    Cleared to select SM0 bit in SCON register.
        //           //    Set to select FE bit in SCON register.
        //           //
        //  POF=0;   // -> Power-Off Flag
        //           //    Cleared to recognize next reset type.
        //           //    Set by hardware when VCC rises from 0 to its nominal voltage. Can also be set by software.
        //           //
        //  GF1=0;   // -> General purpose Flag
        //           //    Cleared by user for general purpose usage
        //           //    Set by user for general purpose usage.
        //           //
        //  GF0=0;   // -> General purpose Flag
        //           //    Cleared by user for general purpose usag
        //           //    Set by user for general purpose usage.
        //           //
        //  PD=0;    // -> Power-Down mode bit
        //           //    Cleared by hardware when reset occurs
        //           //    Set to enter power-down mode.
        //           //
        //  IDL=0;   // -> Idle mode bit
        //           //    Cleared by hardware when interrupt or reset occurs.
        //           //    Set to enter idle mode.
        //           //
        //           //
        // Power-off flag reset value will be 1 only after a power on (cold reset). A warm reset
        // doesn’t affect the value of this bit.

        ES = 1;
    #endif

}


#if TARGET_MCU==LPC922
// Detekuj chybu naruseneho ramce
bit uart_mcu_detect_framing_error()
{
    // check for framing error
    if (SSTAT & 0x08)
    {
        SSTAT &= ~0x08;           // clear interrupt flag
        return(1);
    }
}
#endif



#if TARGET_MCU==LPC922
// Detekuj signal break
bit uart_mcu_detect_break()
{
    // check for break
    if (SSTAT & 0x04)
    {
        SSTAT &= ~0x04;           // clear interrupt flag
        return(1);
    }
}
#endif



#if TARGET_MCU==LPC922
// Detekuj prepsani znaku
bit uart_mcu_detect_overrun()
{
    // check for overrun
    if (SSTAT & 0x02)
    {
        SSTAT &= ~0x02;           // clear interrupt flag
        return(1);
    }
}
#endif



/*
void uart_mcu_disable()
{
    #if TARGET_MCU == LPC922
        ESR = 0;                                  // disable receive interrupt
        //ES  = 0;                                  // disable serial interrupt
    #endif

    #if TARGET_MCU == C51RD2
        ES  = 0;                                  // disable serial interrupt
    #endif
}


void uart_mcu_enable()
{
    #if TARGET_MCU == LPC922
        ESR = 1;                                  // disable receive interrupt
        //ES  = 1;                                  // disable serial interrupt
    #endif

    #if TARGET_MCU == C51RD2
        ES  = 1;                                  // disable serial interrupt
    #endif
}
*/
